<!--A single product as a repeating element is a separate view-->
@model PizzaRestaurant.Domain.Entities.Product



<!--"well" - the class adds a border with a gray background color-->
    <div class="well">

        <!--Paste product photo-->
        @if (Model.ImageData != null)
        {
            <div class="pull-left" style="margin-right: 10px">
                <img class="img-thumbnail" width="75" height="75"
                     src="@Url.Action("GetImage", "Product", new { Model.ProductID })" />
            </div>
        }

        <h3>
            <!--Headlines-->
            <!--Bold text-->
            <strong>@Model.Name</strong>
            <!--"c" - currency value-->
            <span class="pull-right label label-primary">@Model.Price.ToString("c")</span>
        </h3>

        <!--Specification of the "Add" button - omitted for add-ons-->
        @if (Model.Category != "Extras")
        {
            <!--"Html.BeginForm" sends a POST request (from the user to the server, GET - vice versa) - here we add a specific product-->
            using (Html.BeginForm("AddToCart", "Cart"))
            {
                <!--Moves the inscription to the right-->
                <div class="pull-right">
                    <!--Display: <input type = "hidden" name = "ProductID" value = "1"
                    "Html.Hidden" returns the hidden HTML input element for each property in the object represented by the specified expression.-->
                    @Html.HiddenFor(x => x.ProductID)
                    <!--will display: <input type = "hidden" name = "returnUrl" value "/"
                    Returns the hidden input element using the specified HTML helper, form field name, and value.-->
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <!--"submit" is rendered as a button - "class =" btn btn-success "- white text on a green background-->
                    <input type="submit" class="btn btn-success" value="Add to cart" />
                </div>
            }
        }

        <!--"span" - embracing several different elements that are displayed in a line" -->
        <span class="lead">@Model.Description</span>
    </div>