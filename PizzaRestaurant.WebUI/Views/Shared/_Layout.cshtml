<!DOCTYPE html>
<html>
<head>
    <!--The "head" part is not displayed-->
    <meta charset="utf-8" />  <!--Właściwości-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!--Below are two lines that give style to the whole layout-->
    <!-- "href="~/Content/bootstrap.css"" - main css structure (meshes, basic styles etc.)-->
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <!--"href =" ~ / Content / bootstrap-theme.css "" extended stylization (3D buttons, gradients, etc.).
         This file is optional and does not affect the bootstrap functionality at all, it only enhances the look-->
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
    <!--CSS styles for classes used in the checkout summary of the "Checkout" order form.-->
    <link href="~/Content/ErrorStyles.css" rel="stylesheet"
    <title>@ViewBag.Title</title>
</head>

<body>
    <!--Below the page header-->
    <div class="navbar navbar-inverse" role="navigation">
        <!--Adding the "navbar-inverse" class to the "navbar" - creates an inverted navigation bar with a black background and white text-->
        <!--"navbar-brand" enlarges the text a bit, "href =" # "" is the link-->
        <a class="navbar-brand" href="#">Pizza Restaurant</a>
        <!--"Html.Action" - shortcut to the action method in a given controller, here "Summary" in "Cart" (each method in the controller is an action method)-->
        @Html.Action("Summary", "Cart")
    </div>

    <!--Below the left column-->
    <div class="row panel">
        <div id="categories" class="col-xs-3">
            <!--xs = additional small screens - mobile phones-->
            @Html.Action("Menu", "Nav")
        </div>
        <div class="col-xs-8">
            <!--xs = additional small screens - mobile phones-->
            <!--Instead of RenderBody, specific variable content will be placed (here, in the future, PERMANENTLY DISPLAYED categories: types of pizza, etc.),
         site-specific - the layout is unchanged, and there is always something else-->
            @RenderBody()
        </div>
    </div>
</body>
</html>